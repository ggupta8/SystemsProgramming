[
  {
    "timestamp": "2016-09-16 00:00:00.651725", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25018== Memcheck, a memory error detector\n==25018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==25018== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==25018== Command: ././full_test\n==25018== \nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==25018== \n==25018== HEAP SUMMARY:\n==25018==     in use at exit: 520 bytes in 3 blocks\n==25018==   total heap usage: 3 allocs, 0 frees, 520 bytes allocated\n==25018== \n==25018== LEAK SUMMARY:\n==25018==    definitely lost: 0 bytes in 0 blocks\n==25018==    indirectly lost: 0 bytes in 0 blocks\n==25018==      possibly lost: 0 bytes in 0 blocks\n==25018==    still reachable: 520 bytes in 3 blocks\n==25018==         suppressed: 0 bytes in 0 blocks\n==25018== Reachable blocks (those to which a pointer was found) are not shown.\n==25018== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==25018== \n==25018== For counts of detected and suppressed errors, rerun with: -v\n==25018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "checksum": "d98fe0878032b04d02607149485c425b6a90bfb2  mini_valgrind.c", 
    "revision": "22355"
  }, 
  {
    "timestamp": "2016-09-17 00:00:00.660261", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has no memory leaks.", 
        "name": "no_leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test with program that has memory leaks.", 
        "name": "leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has bad frees.", 
        "name": "bad_free", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues.", 
        "name": "full", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "name": "memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==9009== Memcheck, a memory error detector\n==9009== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==9009== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==9009== Command: ././full_test\n==9009== \nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==9009== \n==9009== HEAP SUMMARY:\n==9009==     in use at exit: 520 bytes in 3 blocks\n==9009==   total heap usage: 3 allocs, 0 frees, 520 bytes allocated\n==9009== \n==9009== LEAK SUMMARY:\n==9009==    definitely lost: 0 bytes in 0 blocks\n==9009==    indirectly lost: 0 bytes in 0 blocks\n==9009==      possibly lost: 0 bytes in 0 blocks\n==9009==    still reachable: 520 bytes in 3 blocks\n==9009==         suppressed: 0 bytes in 0 blocks\n==9009== Reachable blocks (those to which a pointer was found) are not shown.\n==9009== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==9009== \n==9009== For counts of detected and suppressed errors, rerun with: -v\n==9009== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "revision": "22842", 
    "checksum": "d98fe0878032b04d02607149485c425b6a90bfb2  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-18 00:00:00.646216", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25068== Memcheck, a memory error detector\n==25068== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==25068== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==25068== Command: ././full_test\n==25068== \nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==25068== \n==25068== HEAP SUMMARY:\n==25068==     in use at exit: 520 bytes in 3 blocks\n==25068==   total heap usage: 3 allocs, 0 frees, 520 bytes allocated\n==25068== \n==25068== LEAK SUMMARY:\n==25068==    definitely lost: 0 bytes in 0 blocks\n==25068==    indirectly lost: 0 bytes in 0 blocks\n==25068==      possibly lost: 0 bytes in 0 blocks\n==25068==    still reachable: 520 bytes in 3 blocks\n==25068==         suppressed: 0 bytes in 0 blocks\n==25068== Reachable blocks (those to which a pointer was found) are not shown.\n==25068== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==25068== \n==25068== For counts of detected and suppressed errors, rerun with: -v\n==25068== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "checksum": "d98fe0878032b04d02607149485c425b6a90bfb2  mini_valgrind.c", 
    "revision": "23710"
  }, 
  {
    "timestamp": "2016-09-19 00:00:00.656635", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==8818== Memcheck, a memory error detector\n==8818== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==8818== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==8818== Command: ././full_test\n==8818== \nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==8818== \n==8818== HEAP SUMMARY:\n==8818==     in use at exit: 520 bytes in 3 blocks\n==8818==   total heap usage: 3 allocs, 0 frees, 520 bytes allocated\n==8818== \n==8818== LEAK SUMMARY:\n==8818==    definitely lost: 0 bytes in 0 blocks\n==8818==    indirectly lost: 0 bytes in 0 blocks\n==8818==      possibly lost: 0 bytes in 0 blocks\n==8818==    still reachable: 520 bytes in 3 blocks\n==8818==         suppressed: 0 bytes in 0 blocks\n==8818== Reachable blocks (those to which a pointer was found) are not shown.\n==8818== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==8818== \n==8818== For counts of detected and suppressed errors, rerun with: -v\n==8818== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "revision": "25067", 
    "checksum": "d98fe0878032b04d02607149485c425b6a90bfb2  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-20 00:00:00.648912", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has no memory leaks.", 
        "name": "no_leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test with program that has memory leaks.", 
        "name": "leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has bad frees.", 
        "name": "bad_free", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues.", 
        "name": "full", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "name": "memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==24982== Memcheck, a memory error detector\n==24982== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==24982== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==24982== Command: ././full_test\n==24982== \nMore than one element in the list.\ntotal_free is incorrect.\nbad_frees is incorrect.\n==24982== \n==24982== HEAP SUMMARY:\n==24982==     in use at exit: 520 bytes in 3 blocks\n==24982==   total heap usage: 3 allocs, 0 frees, 520 bytes allocated\n==24982== \n==24982== LEAK SUMMARY:\n==24982==    definitely lost: 0 bytes in 0 blocks\n==24982==    indirectly lost: 0 bytes in 0 blocks\n==24982==      possibly lost: 0 bytes in 0 blocks\n==24982==    still reachable: 520 bytes in 3 blocks\n==24982==         suppressed: 0 bytes in 0 blocks\n==24982== Reachable blocks (those to which a pointer was found) are not shown.\n==24982== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==24982== \n==24982== For counts of detected and suppressed errors, rerun with: -v\n==24982== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "checksum": "d98fe0878032b04d02607149485c425b6a90bfb2  mini_valgrind.c", 
    "revision": "26795"
  }, 
  {
    "timestamp": "2016-09-21 00:00:00.673242", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFound leaked memory when there wasn't any.\n", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==20565== Memcheck, a memory error detector\n==20565== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==20565== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==20565== Command: ././full_test\n==20565== \n==20565== \n==20565== HEAP SUMMARY:\n==20565==     in use at exit: 0 bytes in 0 blocks\n==20565==   total heap usage: 4 allocs, 4 frees, 4,616 bytes allocated\n==20565== \n==20565== All heap blocks were freed -- no leaks are possible\n==20565== \n==20565== For counts of detected and suppressed errors, rerun with: -v\n==20565== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "27776", 
    "checksum": "c631e191e65e6f1f5300152f35ec082ec8e712a0  mini_valgrind.c"
  }, 
  {
    "timestamp": "2016-09-22 00:00:00.665196", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4610== Memcheck, a memory error detector\n==4610== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==4610== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==4610== Command: ././full_test\n==4610== \n==4610== \n==4610== HEAP SUMMARY:\n==4610==     in use at exit: 0 bytes in 0 blocks\n==4610==   total heap usage: 3 allocs, 3 frees, 520 bytes allocated\n==4610== \n==4610== All heap blocks were freed -- no leaks are possible\n==4610== \n==4610== For counts of detected and suppressed errors, rerun with: -v\n==4610== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "checksum": "35d2c1d4cd01a82e11917d0919b289423819b236  mini_valgrind.c", 
    "revision": "29130"
  }
]